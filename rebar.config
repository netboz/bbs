{erl_opts, [
    debug_info,
    warnings_as_errors,
    nowarn_deprecated_function,
    {platform_define, "^[0-9]+", namespaced_types},
    {parse_transform, lager_transform}
]}.

{dialyzer_base_plt_apps, [kernel, stdlib, erts, sasl, eunit, syntax_tools, compiler, crypto]}.

{xref_warnings, false}.
%% optional extra paths to include in xref:set_library_path/2.
%% specified relative location of rebar.config.
%% e.g. {xref_extra_paths,["../gtknode/src"]}
{xref_extra_paths,[]}.
%% xref checks to run
{xref_checks, [undefined_function_calls, undefined_functions,
               locals_not_used, exports_not_used,
               deprecated_function_calls, deprecated_functions]}.
%% Optional custom xref queries (xref manual has details) specified as
%%     {xref_queries, [{query_string(), expected_query_result()},...]}
%% The following for example removes all references to mod:*foo/4
%% functions from undefined external function calls as those are in a
%% generated module
{xref_queries,
 [{"(XC - UC) || (XU - X - B"
   " - (\"mod\":\".*foo\"/\"4\"))",[]}]}.

{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "."}]}}]}.

{edoc_opts, [{preprocess, true}]}.

{deps, [
    {quickrand, {git, "https://github.com/okeuday/quickrand.git"}},
    {erlware_commons, {git, "https://github.com/erlware/erlware_commons.git", {tag, "v1.6.0"}}},
    {partisan, {git, "https://gitlab.com/yan.guiborat1/partisan.git"}},
    {lasp, {git, "https://gitlab.com/yan.guiborat1/lasp.git", {ref, "dfdfe025cb51ae45d28f39f0425b3b3b902541d8"}}},
    {erleans, {git, "https://gitlab.com/yan.guiborat1/erleans.git"}},
    lager,
    eredis,
    {uuid, {git, "https://github.com/okeuday/uuid.git"}},
    {emqtt, {git, "https://github.com/emqx/emqtt.git"}},
    {erlog, {git, "https://gitlab.com/yan.guiborat1/erlog_bbs.git"}}
]}.

{shell, [
    {config, "config/dev.config"},
    {dev_mode, false},
    {apps, [partisan, lasp, erleans, quickrand, uuid, bbs]}
]}.

{plugins, [rebar3_hex, rebar3_typer]}.

{project_plugins, [
    rebar3_lint
]}.

{relx, [
    {release, {test_tel, "0.11.0"}, [bbs, erlog]},

    {dev_mode, false},
    {include_erts, false},

    {extended_start_script, true}
]}.

{elvis, [
    #{
        dirs => ["src"],
        filter => "*.erl",
        rules => [
            %% {elvis_style, line_length,
            %%  #{ignore => [],
            %%    limit => 80,
            %%    skip_comments => false}},
            {elvis_style, no_tabs},
            {elvis_style, no_trailing_whitespace},
            {elvis_style, macro_names, #{ignore => []}},
            %% {elvis_style, macro_module_names},
            {elvis_style, operator_spaces, #{
                rules => [
                    {right, ","},
                    {right, "++"},
                    {left, "++"}
                ]
            }},
            %% {elvis_style, nesting_level, #{level => 3}},
            {elvis_style, god_modules, #{
                limit => 25,
                ignore => []
            }},
            {elvis_style, no_if_expression},
            %% {elvis_style, invalid_dynamic_call, #{ignore => []}},
            {elvis_style, used_ignored_variable},
            {elvis_style, no_behavior_info},
            {
                elvis_style,
                module_naming_convention,
                #{
                    regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                    ignore => []
                }
            },
            {
                elvis_style,
                function_naming_convention,
                #{regex => "^([a-z][a-z0-9]*_?)*$"}
            },
            {elvis_style, state_record_and_type},
            {elvis_style, no_spec_with_records}
            %% {elvis_style, dont_repeat_yourself, #{min_complexity => 10}}
            %% {elvis_style, no_debug_call, #{ignore => []}}
        ]
    },
    #{
        dirs => ["."],
        filter => "Makefile",
        rules => []
    },
    #{
        dirs => ["."],
        filter => "rebar.config",
        rules => []
    }
]}.
